#compdef ica-check-cwl-inputs

# Generated with perl module App::Spec v0.014

_ica-check-cwl-inputs() {
    local program=ica-check-cwl-inputs
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '--input-json[The WES launch input json
]:input-json:_ica-check-cwl-inputs__option_input_json_completion' \
            '--ica-workflow-id[The ica workflow id you wish to check inputs against
]:ica-workflow-id:_ica-check-cwl-inputs__option_ica_workflow_id_completion' \
            '--ica-workflow-version-name[The ica workflow version name you wish to check inputs against
]:ica-workflow-version-name' \
            '--help[Show command help]' \
            '-h[Show command help]' \
            && ret=0



}

_ica-check-cwl-inputs__option_input_json_completion() {
    local __dynamic_completion
    local CURRENT_WORD="$words[CURRENT]"
    IFS=$'\n' __dynamic_completion=( $( 
find $PWD -name '*.json'
 ) )
    compadd -X "input_json:" $__dynamic_completion
}
_ica-check-cwl-inputs__option_ica_workflow_id_completion() {
    local __dynamic_completion
    local CURRENT_WORD="$words[CURRENT]"
    IFS=$'\n' __dynamic_completion=( $( 
curl \
  --silent \
  --request GET \
  --header "Authorization: Bearer $ICA_ACCESS_TOKEN" \
  "$ICA_BASE_URL/v1/workflows/?pageSize=1000" | \
jq --raw-output '.items[] | .id'

 ) )
    compadd -X "ica_workflow_id:" $__dynamic_completion
}

__ica-check-cwl-inputs_dynamic_comp() {
    local argname="$1"
    local arg="$2"
    local comp="arg:$argname:(("
    local line
    while read -r line; do
        local name="$line"
        local desc="$line"
        name="${name%$'\t'*}"
        desc="${desc/*$'\t'}"
        comp="$comp$name"
        if [[ -n "$desc" && "$name" != "$desc" ]]; then
            comp="$comp\\:"'"'"$desc"'"'
        fi
        comp="$comp "
    done <<< "$arg"

    comp="$comp))"
    _alternative "$comp"
}

