#compdef gds-bam-index

# Generated with perl module App::Spec v0.014

_gds-bam-index() {
    local program=gds-bam-index
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '--sorted-bam-path[Required, path to sorted bam path that needs to be indexed
]:sorted-bam-path:_gds-bam-index__option_sorted_bam_path_completion' \
            '--log-path[Required, path to directory we wish to store the TES logs
]:log-path:_gds-bam-index__option_log_path_completion' \
            '--help[Show command help]' \
            '-h[Show command help]' \
            && ret=0



}

_gds-bam-index__option_sorted_bam_path_completion() {
    local __dynamic_completion
    local CURRENT_WORD="$words[CURRENT]"
    IFS=$'\n' __dynamic_completion=( $( 
gds-ls "${CURRENT_WORD}" 2>/dev/null
 ) )
    compadd -X "sorted_bam_path:" $__dynamic_completion
}
_gds-bam-index__option_log_path_completion() {
    local __dynamic_completion
    local CURRENT_WORD="$words[CURRENT]"
    IFS=$'\n' __dynamic_completion=( $( 
gds-ls "${CURRENT_WORD}" 2>/dev/null
 ) )
    compadd -X "log_path:" $__dynamic_completion
}

__gds-bam-index_dynamic_comp() {
    local argname="$1"
    local arg="$2"
    local comp="arg:$argname:(("
    local line
    while read -r line; do
        local name="$line"
        local desc="$line"
        name="${name%$'\t'*}"
        desc="${desc/*$'\t'}"
        comp="$comp$name"
        if [[ -n "$desc" && "$name" != "$desc" ]]; then
            comp="$comp\\:"'"'"$desc"'"'
        fi
        comp="$comp "
    done <<< "$arg"

    comp="$comp))"
    _alternative "$comp"
}

