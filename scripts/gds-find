#!/usr/bin/env bash

: '
Traverse a directory and find files directories with a given syntax

Credit where credit is due:
* https://til.hashrocket.com/posts/uv0bjiokwk-use-jq-to-filter-objects-list-with-regex
'

set -euo pipefail

# Help function
print_help(){
  echo "
        Usage: gds-find (--gds-path gds://volume-name/path-to-folder/) (--type d/directory/f/file)
                                                                       [--mindepth <int>]
                                                                       [--maxdepth <int>]
                                                                       [--name <regex>]

        Options:
            -g / --gds-path:  Required - Path to gds directory
            -t / --type:      Required - What are we looking for? A directory or file
            --name:           Required - File / Directory name, '*' globbing is supported
            --mindepth:       Optional - Minimum directory depth before returning results
            --maxdepth:       Optional - Maximum directory depth before returning results

        Requirements:
          * jq     (v1.5+)
          * python3 (v3.4+)
          * curl

        Environment:
          * ICA_BASE_URL
          * ICA_ACCESS_TOKEN
        "
}

binaries_check(){
  : '
  Check each of the required binaries are available
  '
  if ! (type jq python3 curl 1>/dev/null); then
    return 1
  fi
}

# Get args
gds_path=""
type=""
mindepth="-1"
maxdepth="-1"
name=""

# Get args from command line
while [ $# -gt 0 ]; do
  case "$1" in
    -g | --gds-path)
      gds_path="$2"
      shift 1
      ;;
    -t | --type)
      type="$2"
      shift 1
      ;;
    --mindepth)
      mindepth="$2"
      shift 1
      ;;
    --maxdepth)
      maxdepth="$2"
      shift 1
      ;;
    --name)
      name="$2"
      shift 1
      ;;
    -h | --help)
      print_help
      exit 0
      ;;
  esac
  shift 1
done

###########ICA-ICA-LAZY SETUP ########################################

if [[ -z "${ICA_ICA_LAZY_HOME-}" ]]; then
  echo "Error - please ensure env var 'ICA_ICA_LAZY_HOME' is set" 1>&2
  exit 1
fi

if [[ -d "${ICA_ICA_LAZY_HOME}/internal-functions" ]]; then
  for f in "${ICA_ICA_LAZY_HOME}/internal-functions/"*".sh"; do
      # shellcheck source=../internal-functions/*.sh
      source "$f"
  done
fi

##########END ICA-ICA-LAZY SETUP ####################################

# Check and set args
if [[ -z "${type}" ]]; then
  echo_stderr "--type not specified"
  exit 1
elif [[ "${type}" == "d" || "${type}" == "directory" ]]; then
  type="directory"
elif [[ "${type}" == "f" || "${type}" == "file" ]]; then
  type="file"
else
  echo_stderr "Could not determine type from --type arg '${type}'"
  echo_stderr "Must be one of 'd' / 'directory' / 'f' / 'file'"
  exit 1
fi

# Check mindepth / maxdepth
if [[ "${mindepth}" =~ ^[0-9]+$ || "${mindepth}" == "-1" ]]; then
  # Maxdepth integer all good
  :
else
  echo_stderr "Please ensure mindepth is a positive integer, got '${mindepth}'"
  exit 1
fi
if [[ "${maxdepth}" =~ ^[0-9]+$ || "${maxdepth}" == "-1" ]]; then
  # Maxdepth integer all good
  :
else
  echo_stderr "Please ensure maxdepth is a positive integer '${maxdepth}'"
  exit 1
fi

# Ensure gds_path param is set
if [[ -z "${gds_path}" ]]; then
  echo_stderr "Please make sure --gds-path parameter is set"
  exit 1
fi

if [[ -z "${name}" ]]; then
  echo_stderr "Please make sure --name parameter is set"
  exit 1
fi

# Start
if [[ -z "${ICA_BASE_URL-}" ]]; then
    echo "Error: Need to set var \"ICA_BASE_URL\"" 1>&2
    exit 1
fi

if [[ -z "${ICA_ACCESS_TOKEN-}" ]]; then
    echo "Error: Need to set var \"ICA_ACCESS_TOKEN\"" 1>&2
    echo "Error: Please first run ica-context-switcher" 1>&2
    exit 1
fi

# Check token expiry
check_token_expiry "${ICA_ACCESS_TOKEN}"

# Get volume path from gds path
volume_name="$(get_volume_from_gds_path "${gds_path}")"
folder_path="$(get_folder_path_from_gds_path "${gds_path}")"

# replace literal * with \\S
name="${name//\*/\\S+}"

# replace literal . with \\.
name="${name//\./\\.}"

# Place literal '^' at start and '$' at end of name
name="^${name}\$"

if ! check_path_is_folder "${volume_name}" "${folder_path}" "${ICA_BASE_URL}" "${ICA_ACCESS_TOKEN}"; then
  echo_stderr "Could not find directory '${gds_path}'"
  exit 1
fi

gds_search "${volume_name}" "${folder_path}" "0" "${mindepth}" "${maxdepth}" "${type}" "${name}" "${ICA_BASE_URL}" "${ICA_ACCESS_TOKEN}"
